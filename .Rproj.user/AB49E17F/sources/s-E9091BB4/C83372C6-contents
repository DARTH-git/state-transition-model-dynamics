
######  Follow up after Colorectal Cancer - A Decision Tree  in R ############

##############################################################################
## Credits for the R Code: Petros Pechlivanoglou, Fernando Alarid- Escudero ##
##                         Hawre Jalal and Mohammad Kaviul Kahn             ##
## Credits for the example: A. Gray et al 2011                              ##
## Applied Methods of Cost-effectiveness Analysis in Healthcare             ##
## Cost effectiveness of follow-up strategies after colon cancer surgery    ##
## Strategies: PC(Primary Care), HC (Hospital Care), RP (Routine Practice)  ##
##############################################################################

# Developed by the Decision Analysis in R for Technologies in Health (DARTH) group
# Fernando Alarid-Escudero, PhD (1) 
# Eva A. Enns, MS, PhD (1)	
# M.G. Myriam Hunink, MD, PhD (2,3)
# Hawre J. Jalal, MD, PhD (4) 
# Eline M. Krijkamp, MSc (2)	
# Petros Pechlivanoglou, PhD (5) 

# In collaboration of: 		
# 1 University of Minnesota School of Public Health, Minneapolis, MN, USA
# 2 Erasmus MC, Rotterdam, The Netherlands
# 3 Harvard T.H. Chan School of Public Health, Boston, USA
# 4 University of Pittsburgh Graduate School of Public Health, Pittsburgh, PA, USA
# 5 The Hospital for Sick Children, Toronto and University of Toronto, Toronto ON, Canada

#####################################################################################
# Please cite our publications when using this code
# Jalal H, et al. An Overview of R in Health Decision Sciences. Med. Decis. Making. 2017; 37(3): 735-746. 
# Krijkamp EM, et al. Microsimulation modeling for health decision sciences using R: a tutorial. Med. Decis. Making. 2018; (in press). 

#####################################################################################
# ? Copyright 2017, THE HOSPITAL FOR SICK CHILDREN AND THE COLLABORATING INSTITUTIONS. 
# All rights reserved in Canada, the United States and worldwide.  
# Copyright, trademarks, trade names and any and all associated intellectual property are exclusively owned by THE HOSPITAL FOR SICK CHILDREN and the 
# collaborating institutions and may not be used, reproduced, modified, distributed or adapted in any way without written permission.

#####################################################################################

rm(list = ls())      # clear memory (removes all the variables from the workspace)

# Set working directory 

nsim <- 10000   # number of iterations 
Strategies      <- c("Routine Practice", "Primary Care", "Hospital Care")  


#################### Estimation of the Decision  Tree:   Method 0.0  ########################################

p <- Sys.time()  # Start the clock 

#initialize C and LE that will store the results from the simulations
C <- LE <- matrix(NA, nrow = nsim, ncol = length(Strategies))
colnames(C) <- colnames(LE) <- Strategies

for (i in 1:nsim){
  
  p.PCed <- rbeta(1, 320, 480)   # Probability of early detection PC
  p.HCed <- rbeta(1, 360, 440)   # Probability of early detection HC
  p.RPed <- rbeta(1, 280, 520)   # Probability of early detection RP 
  
  le.ed  <- rnorm(1, 7, 1.2)      # Life expectancy after early detection
  le.ld  <- rnorm(1, 1, 0.03)     # Life expectancy after  late detection 
  
  c.PCed <- rnorm(1, 3900,  1000)   # Total costs after early detection with PC
  c.HCed <- rnorm(1, 6200,  1500)   # Total costs after early detection with HC
  c.RPed <- rnorm(1, 3030,   250)   # Total costs after early detection with RP
  c.PCld <- rnorm(1, 12800, 2050)   # Total costs after  late detection with PC
  c.HCld <- rnorm(1, 14400, 1500)   # Total costs after  late detection with HC
  c.RPld <- rnorm(1, 12020,  666)   # Total costs after  late detection with RP
  
  # for costs
  c.RP <- p.RPed * c.RPed + (1 - p.RPed) * c.RPld # RP cost
  c.PC <- p.PCed * c.PCed + (1 - p.PCed) * c.PCld # PC cost
  c.HC <- p.HCed * c.HCed + (1 - p.HCed) * c.HCld # HC cost
  
  # ...and for effects
  e.RP <- p.RPed * le.ed + (1 - p.RPed) * le.ld   # RP life expectancy
  e.PC <- p.PCed * le.ed + (1 - p.PCed) * le.ld   # PC life expectancy
  e.HC <- p.HCed * le.ed + (1 - p.HCed) * le.ld   # HC life expectancy
  
  LE[i,] <- c(e.RP, e.PC, e.HC)                     # vector of life expectancies
  C[i, ] <- c(c.RP, c.PC, c.HC)                     # vector of total costs
}

 Sys.time() - p  # stop the clock

 
 #################### Estimation of the Decision  Tree:   Method 0.1  ########################################
 ############### Take the RNG outside of the loop
 
 p <- Sys.time()  # Start the clock 
 
 p.PCed <- rbeta(nsim, 320, 480)   # Probability of early detection PC
 p.HCed <- rbeta(nsim, 360, 440)   # Probability of early detection HC
 p.RPed <- rbeta(nsim, 280, 520)   # Probability of early detection RP 
 
 le.ed  <- rnorm(nsim, 7, 1.2)      # Life expectancy after early detection
 le.ld  <- rnorm(nsim, 1,0.03)      # Life expectancy after  late detection 
 
 c.PCed <- rnorm(nsim, 3900,  1000)   # Total costs after early detection with PC
 c.HCed <- rnorm(nsim, 6200,  1500)   # Total costs after early detection with HC
 c.RPed <- rnorm(nsim, 3030,   250)   # Total costs after early detection with RP
 c.PCld <- rnorm(nsim, 12800, 2050)   # Total costs after  late detection with PC
 c.HCld <- rnorm(nsim, 14400, 1500)   # Total costs after  late detection with HC
 c.RPld <- rnorm(nsim, 12020,  666)   # Total costs after  late detection with RP
 
 C<- LE <- matrix(NA, nrow = nsim, ncol = length(Strategies),
                  dimnames = list( 1:nsim, c("RP", "PC", "HC")))  # names for the elements of the two vectors
 
 for (i in 1:nsim){
   
   # for costs
   c.RP <- p.RPed[i] * c.RPed[i] + (1 - p.RPed[i]) * c.RPld[i] # RP cost
   c.PC <- p.PCed[i] * c.PCed[i] + (1 - p.PCed[i]) * c.PCld[i] # PC cost
   c.HC <- p.HCed[i] * c.HCed[i] + (1 - p.HCed[i]) * c.HCld[i] # HC cost
   
   # ...and for effects
   e.RP <- p.RPed[i] * le.ed[i] + (1 - p.RPed[i]) * le.ld[i]   # RP life expectancy
   e.PC <- p.PCed[i] * le.ed[i] + (1 - p.PCed[i]) * le.ld[i]   # PC life expectancy
   e.HC <- p.HCed[i] * le.ed[i] + (1 - p.HCed[i]) * le.ld[i]   # HC life expectancy
   
   LE[i, ] <- c(e.RP, e.PC, e.HC)                     # vector of life expectancies
   C[i, ]  <- c(c.RP, c.PC, c.HC)                     # vector of total costs
 }
 
 Sys.time() - p  # stop the clock

#################### Estimation of the Decision  Tree:   Method 1  ########################################

# the solution of the tree is the sum of the weights (probabilities of each leaf) times the reward of every leaf.
 
p <- Sys.time()  # Start the clock 
 
# for costs
c.RP <- p.RPed * c.RPed + (1 - p.RPed) * c.RPld # RP cost
c.PC <- p.PCed * c.PCed + (1 - p.PCed) * c.PCld # PC cost
c.HC <- p.HCed * c.HCed + (1 - p.HCed) * c.HCld # HC cost

# ...and for effects
e.RP <- p.RPed * le.ed + (1 - p.RPed) * le.ld   # RP life expectancy
e.PC <- p.PCed * le.ed + (1 - p.PCed) * le.ld   # PC life expectancy
e.HC <- p.HCed * le.ed + (1 - p.HCed) * le.ld   # HC life expectancy

LE <- cbind(e.RP, e.PC, e.HC)                     # matrix of life expectancies
C  <- cbind(c.RP, c.PC, c.HC)                     # matrix of total costs

Sys.time() - p  # stop the clock

#################### Estimation of the Decision  Tree:   Vectorization method  ########################################
p <- Sys.time()  # Start the clock 

p.ed <- cbind(p.RPed, p.PCed, p.HCed)      # create matrix of probabilities for early detection
c.ed <- cbind(c.RPed, c.PCed, c.HCed)      # create matrix of costs for early detection
c.ld <- cbind(c.RPld, c.PCld, c.HCld)      # create matrix of costs for late detection

m.C  <- p.ed *  c.ed + (1 - p.ed) *  c.ld          # matrix of life expectancies
m.LE <- p.ed * le.ed + (1 - p.ed) * le.ld          # matrix of total costs
Sys.time() - p  # stop the clock


# load the functions necessary for the estimation of the alpha and beta  (beta distribution) 
source("functions.R")

# Define a range of CE trhesholds
thres <- seq(0, 50000, by = 1000)

# install and load the necessary package BCEA
install.packages("BCEA")
library(BCEA)


# Estimate VOI and generate graphs (CEAC, CE planes etc)
m <- bcea(e = m.LE, c = m.C, ref = 1, interventions = Strategies, 
          Kmax = 50000, wtp = thres)
# Plotting and summary
summary(m)
plot(m)

mce <- multi.ce(m)
ceaf.plot(mce)

### CEAF using ggplot
require(reshape2)
require(ggplot2)
outcomes <- matrix(rbind(m.C, m.LE), nrow = nsim)
tree.ceaf <- CEAF(wtp = thres, strategies = Strategies, Outcomes = outcomes)$ceac
tree.ceaf.plot <- plotCEAF(tree.ceaf) + 
  scale_x_continuous(breaks = number_ticks(10)) +
  scale_y_continuous(breaks = number_ticks(5), limits = c(0, 1)) +
  theme(legend.position = c(0.8, 0.8))
tree.ceaf.plot

plot(LE[, 1], C[, 1], ylim = c(-15000, 15000), xlim = c(0, 6))
points(LE[, 2],C[, 2],col= "red")
points(LE[, 3],C[, 3],col= "green")
abline(h = 0)
abline(v = 0)
